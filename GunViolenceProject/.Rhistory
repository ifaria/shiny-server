ggplot(wat, aes(Subjectlaw, state)) +
geom_tile(aes(fill = value),
color = "white") +
scale_fill_gradient(low = "white",
high = "steelblue") +
coord_flip() +
theme_grey(base_size = base_size) + labs(x = "", y = "") +
scale_x_discrete(expand = c(0, 0)) +
opts(legend.position = "none",
axis.ticks = theme_blank(),
axis.text.x = theme_text(size = base_size * 0.8, angle = 330, hjust = 0, colour = "grey50"))
?opts
ggplot(wat, aes(Subjectlaw, state)) +
geom_tile(aes(fill = value),
color = "white") +
scale_fill_gradient(low = "white",
high = "steelblue") +
coord_flip() +
theme_grey(base_size = base_size) + labs(x = "", y = "") +
scale_x_discrete(expand = c(0, 0)) + opts(legend.position = "none",
axis.ticks = theme_blank(), axis.text.x = theme_text(size = base_size * 0.8, angle = 330, hjust = 0, colour = "grey50"))
ggplot(wat, aes(Subjectlaw, state)) +
geom_tile(aes(fill = value),
color = "white") +
scale_fill_gradient(low = "white",
high = "steelblue") +
coord_flip() +
theme_grey(base_size = base_size) + labs(x = "", y = "") +
scale_x_discrete(expand = c(0, 0)) + theme(legend.position = "none",
axis.ticks = theme_blank(), axis.text.x = theme_text(size = base_size * 0.8, angle = 330, hjust = 0, colour = "grey50"))
ggplot(wat, aes(Subjectlaw, state)) +
geom_tile(aes(fill = value),
color = "white") +
scale_fill_gradient(low = "white",
high = "steelblue") +
coord_flip() +
theme_grey(base_size = base_size) + labs(x = "", y = "") +
scale_x_discrete(expand = c(0, 0)) +
theme(legend.position = "none",
axis.ticks = theme_blank(),
axis.text.x = theme_text(size = base_size * 0.8, angle = 330, hjust = 0, colour = "grey50"))
?theme
ggplot(wat, aes(Subjectlaw, state)) +
geom_tile(aes(fill = value),
color = "white") +
scale_fill_gradient(low = "white",
high = "steelblue") +
coord_flip() +
theme_grey(base_size = base_size) + labs(x = "", y = "") +
scale_x_discrete(expand = c(0, 0)) +
theme(#legend.position = "none",
axis.ticks = theme_blank(),
axis.text.x = theme_text(size = base_size * 0.8, angle = 330, hjust = 0, colour = "grey50"))
ggplot(wat, aes(Subjectlaw, state)) +
geom_tile(aes(fill = value),
color = "white") +
scale_fill_gradient(low = "white",
high = "steelblue") +
coord_flip() +
theme_grey(base_size = base_size) + labs(x = "", y = "") +
scale_x_discrete(expand = c(0, 0)) +
theme(#legend.position = "none",
axis.ticks = theme_blank(),
axis.text.x = element_text(size = base_size * 0.8, angle = 330, hjust = 0, colour = "grey50"))
ggplot(wat, aes(Subjectlaw, state)) +
geom_tile(aes(fill = value),
color = "white") +
scale_fill_gradient(low = "white",
high = "steelblue") +
coord_flip() +
theme_grey(base_size = base_size) + labs(x = "", y = "") +
scale_x_discrete(expand = c(0, 0)) +
theme(#legend.position = "none",
#axis.ticks = theme_blank(),
axis.text.x = element_text(size = base_size * 0.8, angle = 330, hjust = 0, colour = "grey50"))
ggplot(wat, aes(Subjectlaw, state)) +
geom_tile(aes(fill = value),
color = "white") +
scale_fill_gradient(low = "white",
high = "steelblue") +
coord_flip() +
theme_grey(base_size = base_size) + labs(x = "", y = "") +
scale_fill_distiller(palette = "RdBu", trans = "reverse") +
theme(#legend.position = "none",
#axis.ticks = theme_blank(),
axis.text.x = element_text(size = base_size * 0.8, angle = 330, hjust = 0, colour = "grey50"))
ggplot(wat, aes(Subjectlaw, state)) +
geom_tile(aes(fill = value),
color = "white") +
scale_fill_gradient(low = "white",
high = "steelblue") +
coord_flip() +
theme_grey(base_size = base_size) + labs(x = "", y = "") +
scale_fill_distiller(palette = "RdBu") +
theme(#legend.position = "none",
#axis.ticks = theme_blank(),
axis.text.x = element_text(size = base_size * 0.8, angle = 330, hjust = 0, colour = "grey50"))
ggplot(wat, aes(Subjectlaw, state)) +
geom_tile(aes(fill = value),
color = "white") +
scale_fill_gradient(low = "white",
high = "steelblue") +
coord_flip() +
theme_classic(base_size = base_size) +
labs(x = "", y = "") +
scale_fill_distiller(palette = "RdBu") +
theme(#legend.position = "none",
#axis.ticks = theme_blank(),
axis.text.x = element_text(size = base_size * 0.8, angle = 330, hjust = 0, colour = "grey50"))
ggplot(wat, aes(Subjectlaw, state)) +
geom_tile(aes(fill = value),
color = "white") +
scale_fill_gradient(low = "white",
high = "steelblue") +
coord_flip() +
theme_bw(base_size = base_size) +
labs(x = "", y = "") +
scale_fill_distiller(palette = "RdBu") +
theme(#legend.position = "none",
#axis.ticks = theme_blank(),
axis.text.x = element_text(size = base_size * 0.8, angle = 330, hjust = 0, colour = "grey50"))
ggplot(wat, aes(Subjectlaw, state)) +
geom_tile(aes(fill = value),
color = "white") +
scale_fill_gradient(low = "white",
high = "steelblue") +
coord_flip() +
theme_bw(base_size = base_size) +
labs(x = "", y = "") +
scale_fill_brewer(palette = "RdBu") +
theme(#legend.position = "none",
#axis.ticks = theme_blank(),
axis.text.x = element_text(size = base_size * 0.8, angle = 330, hjust = 0, colour = "grey50"))
ggplot(wat, aes(Subjectlaw, state)) +
geom_tile(aes(fill = value),
color = "white") +
scale_fill_gradient(low = "white",
high = "steelblue") +
coord_flip() +
theme_bw(base_size = base_size) +
labs(x = "", y = "") +
scale_fill_distiller(palette = "RdBu") +
theme(#legend.position = "none",
#axis.ticks = theme_blank(),
axis.text.x = element_text(size = base_size * 0.8, angle = 330, hjust = 0, colour = "grey50"))
ggplot(wat, aes(Subjectlaw, state)) +
geom_tile(aes(fill = value),
color = "white") +
scale_fill_gradient(low = "white",
high = "steelblue") +
coord_flip() +
theme_bw(base_size = base_size) +
labs(x = "", y = "") +
scale_fill_distiller(palette = "PiYG") +
theme(#legend.position = "none",
#axis.ticks = theme_blank(),
axis.text.x = element_text(size = base_size * 0.8, angle = 330, hjust = 0, colour = "grey50"))
ggplot(wat, aes(Subjectlaw, state)) +
geom_tile(aes(fill = value),
color = "white") +
scale_fill_gradient(low = "white",
high = "steelblue") +
coord_flip() +
theme_bw(base_size = base_size) +
labs(x = "", y = "") +
scale_fill_distiller(palette = "Spectral") +
theme(#legend.position = "none",
#axis.ticks = theme_blank(),
axis.text.x = element_text(size = base_size * 0.8, angle = 330, hjust = 0, colour = "grey50"))
ggplot(wat, aes(Subjectlaw, state)) +
geom_tile(aes(fill = value),
color = "white") +
scale_fill_gradient(low = "white",
high = "steelblue") +
coord_flip() +
theme_bw(base_size = base_size) +
labs(x = "", y = "") +
scale_fill_distiller(palette = "BrBG") +
theme(#legend.position = "none",
#axis.ticks = theme_blank(),
axis.text.x = element_text(size = base_size * 0.8, angle = 330, hjust = 0, colour = "grey50"))
ggplot(wat, aes(Subjectlaw, state)) +
geom_tile(aes(fill = value),
color = "white") +
scale_fill_gradient(low = "white",
high = "steelblue") +
coord_flip() +
theme_bw(base_size = base_size) +
labs(x = "", y = "") +
scale_fill_distiller(palette = "PRGn") +
theme(#legend.position = "none",
#axis.ticks = theme_blank(),
axis.text.x = element_text(size = base_size * 0.8, angle = 330, hjust = 0, colour = "grey50"))
ggplot(wat, aes(Subjectlaw, state)) +
geom_tile(aes(fill = value),
color = "white") +
scale_fill_gradient(low = "white",
high = "steelblue") +
coord_flip() +
theme_bw(base_size = base_size) +
labs(x = "", y = "") +
scale_fill_distiller(palette = "PuOr") +
theme(#legend.position = "none",
#axis.ticks = theme_blank(),
axis.text.x = element_text(size = base_size * 0.8, angle = 330, hjust = 0, colour = "grey50"))
ggplot(wat, aes(Subjectlaw, state)) +
geom_tile(aes(fill = value),
color = "white") +
scale_fill_gradient(low = "white",
high = "steelblue") +
coord_flip() +
theme_bw(base_size = base_size) +
labs(x = "", y = "") +
scale_fill_distiller(palette = "BrBG") +
theme(#legend.position = "none",
#axis.ticks = theme_blank(),
axis.text.x = element_text(size = base_size * 0.8, angle = 330, hjust = 0, colour = "grey50"))
look <- enframe(state_laws, name = "state", value = "laws")
look2 <- unnest(look) %>% map_dfc(as.factor)
longguns <- list(
yes <- c("18", "Yes"),
partially <- c("Partial", "Yes, with exceptions", "Yes*"),
dontknow <- c("N/A", "Not defined - de facto", NA),
no <- c("No[53], No")
)
lawtomatrix <- function(col, listchange){
ifelse(col %in% longguns[[1]], "Yes",
ifelse(col %in% longguns[[2]], "Partial",
ifelse(col %in% longguns[[3]], "Unknown", "No")))
}
look3 <- look2 %>%
mutate(Longguns = lawtomatrix(look2$Longguns, longguns),
Handguns = lawtomatrix(look2$Handguns, handguns)) %>%
select(state, Subjectlaw, Longguns) %>%
distinct()
View(look3)
look4 <- data.table::melt(look3)
View(look4)
ggplot(look4, aes(Subjectlaw, state)) +
geom_tile(aes(fill = value),
color = "white") +
scale_fill_gradient(low = "white",
high = "steelblue") +
coord_flip() +
theme_bw(base_size = base_size) +
labs(x = "", y = "") +
scale_fill_distiller(palette = "BrBG") +
theme(#legend.position = "none",
#axis.ticks = theme_blank(),
axis.text.x = element_text(size = base_size * 0.8, angle = 330, hjust = 0, colour = "grey50"))
ggplot(look4, aes(Subjectlaw, state)) +
geom_tile(aes(fill = Longguns),
color = "white") +
scale_fill_gradient(low = "white",
high = "steelblue") +
coord_flip() +
theme_bw(base_size = base_size) +
labs(x = "", y = "") +
scale_fill_distiller(palette = "BrBG") +
theme(#legend.position = "none",
#axis.ticks = theme_blank(),
axis.text.x = element_text(size = base_size * 0.8, angle = 330, hjust = 0, colour = "grey50"))
ggplot(look4, aes(Subjectlaw, state)) +
geom_tile(aes(fill = Longguns),
color = "white") +
scale_fill_gradient(low = "white",
high = "steelblue") +
coord_flip() +
theme_bw(base_size = base_size) +
labs(x = "", y = "") +
scale_fill_brewer(palette = "BrBG") +
theme(#legend.position = "none",
#axis.ticks = theme_blank(),
axis.text.x = element_text(size = base_size * 0.8, angle = 330, hjust = 0, colour = "grey50"))
ggplot(look3, aes(Subjectlaw, state)) +
geom_tile(aes(fill = Longguns),
color = "white") +
scale_fill_gradient(low = "white",
high = "steelblue") +
coord_flip() +
theme_bw(base_size = base_size) +
labs(x = "", y = "") +
scale_fill_brewer(palette = "BrBG") +
theme(#legend.position = "none",
#axis.ticks = theme_blank(),
axis.text.x = element_text(size = base_size * 0.8, angle = 330, hjust = 0, colour = "grey50"))
ggplot(look3, aes(Subjectlaw, state)) +
geom_tile(aes(fill = Longguns),
color = "white") +
scale_fill_gradient(low = "white",
high = "steelblue") +
coord_flip() +
theme_bw(base_size = 9) +
labs(x = "", y = "") +
scale_fill_brewer(palette = "BrBG") +
theme(#legend.position = "none",
#axis.ticks = theme_blank(),
axis.text.x = element_text(size = base_size * 0.8, angle = 330, hjust = 0, colour = "grey50"))
look <- enframe(state_laws, name = "state", value = "laws") %>%
unnest() %>%
map_dfc(as.factor)
look2 <- look %>%
mutate(Longguns = lawtomatrix(look2$Longguns, longguns),
Handguns = lawtomatrix(look2$Handguns, handguns)) %>%
select(state, Subjectlaw, Longguns) %>%
distinct()
ggplot(look2, aes(Subjectlaw, state)) +
geom_tile(aes(fill = Longguns),
color = "white") +
scale_fill_gradient(low = "white",
high = "steelblue") +
coord_flip() +
theme_bw(base_size = 9) +
labs(x = "", y = "") +
scale_fill_brewer(palette = "BrBG") +
theme(#legend.position = "none",
#axis.ticks = theme_blank(),
axis.text.x = element_text(size = base_size * 0.8, angle = 330, hjust = 0, colour = "grey50"))
library(shiny); runApp('GVShinyDashboardLaws.R')
runApp('GVShinyDashboardLaws.R')
###
look <- enframe(state_laws, name = "state", value = "laws") %>%
unnest() %>%
map_dfc(as.factor)
longguns <- list(
yes <- c("18", "Yes"),
partially <- c("Partial", "Yes, with exceptions", "Yes*"),
dontknow <- c("N/A", "Not defined - de facto", NA),
no <- c("No[53], No")
)
lawtomatrix <- function(col, listchange){
ifelse(col %in% longguns[[1]], "Yes",
ifelse(col %in% longguns[[2]], "Partial",
ifelse(col %in% longguns[[3]], "Unknown", "No")))
}
handguns <- list(
yes = c("Yes", "21[127]"),
partially = c("Partial", "Vehicle carry only", "Yes*", "Yes, with exceptions"),
dontknow = c("N/A", NA)
)
look2 <- look %>%
mutate(Longguns = lawtomatrix(look2$Longguns, longguns),
Handguns = lawtomatrix(look2$Handguns, handguns)) %>%
select(state, Subjectlaw, Longguns) %>%
distinct()
runApp('GVShinyDashboardLaws.R')
look2 <- look %>%
mutate(Longguns = lawtomatrix(look2$Longguns, longguns)) %>%
select(state, Subjectlaw, Longguns) %>%
distinct()
ggplot(look2, aes(Subjectlaw, state)) +
geom_tile(aes(fill = Longguns),
color = "white") +
scale_fill_gradient(low = "white",
high = "steelblue") +
coord_flip() +
theme_bw(base_size = 9) +
labs(x = "", y = "") +
scale_fill_brewer(palette = "BrBG") +
theme(#legend.position = "none",
#axis.ticks = theme_blank(),
axis.text.x = element_text(size = base_size * 0.8, angle = 330, hjust = 0, colour = "grey50"))
runApp('GVShinyDashboardLaws.R')
View(look)
runApp('GVShinyDashboardLaws.R')
runApp('GVShinyDashboardLaws.R')
runApp('GVShinyDashboardLaws.R')
runApp('GVShinyDashboardLaws.R')
runApp('GVShinyDashboardLaws.R')
runApp('fdgs')
runApp('GVShinyDashboardLaws.R')
runApp('GVShinyDashboardLaws.R')
runApp('GVShinyDashboardLaws.R')
library(shiny); runApp('GVShinyDashboardLaws.R')
library(shiny); runApp('GVShinyDashboardLaws.R')
View(look2)
runApp('GVShinyDashboardLaws.R')
look$Subjectlaw
distinct(look$Subjectlaw)
unique(look$Subjectlaw)
unique(look$Subjectlaw) %>%
View()
look <- enframe(state_laws, name = "state", value = "laws") %>%
unnest() %>%
map_dfc(as.factor)
View(look)
look <- enframe(state_laws, name = "state", value = "laws") %>%
unnest() %>%
map_dfc(as.factor) %>%
mutate(Subjectlaw = str_to_sentence(Subjectlaw))
View(look)
look$Subjectlaw == "Assault weapon prohibition or restrictions?"
which(look$Subjectlaw == "Assault weapon prohibition or restrictions?")
look[, "Subjectlaw"]
look[look$Subjectlaw=="Assault weapon prohibition or restrictions?", "Subjectlaw"]
look[look$Subjectlaw=="Assault weapon prohibition or restrictions?", "Subjectlaw"] <- "Assult weapon law?"
look <- enframe(state_laws, name = "state", value = "laws") %>%
unnest() %>%
map_dfc(as.factor) %>%
mutate(Subjectlaw = str_to_sentence(Subjectlaw))
look$Subjectlaw
look$Subjectlaw == "Assault weapon prohibition or restrictions?"
look[look$Subjectlaw == "Assault weapon prohibition or restrictions?",]
look[look$Subjectlaw == "Assault weapon prohibition or restrictions?", "Subject law"]
look[look$Subjectlaw == "Assault weapon prohibition or restrictions?", "Subjectlaw"]
awb <- c("Assault weapon prohibition or restrictions?", "Assault weapons law?")
look$Subjectlaw %in% awb
which(look$Subjectlaw %in% awb)
look[which(look$Subjectlaw %in% awb),"Subjectlaw"]
look[which(look$Subjectlaw %in% awb),"Subjectlaw"] <- "Assault weapon law?"
look[which(look$Subjectlaw %in% "Castle"),"Subjectlaw"]
look$Subjectlaw %in% "Castle")
look$Subjectlaw %in% "Castle"
which(look$Subjectlaw %in% "Castle")
look[which("Castle" %in% look$Subjectlaw),"Subjectlaw"]
which(look$Subjectlaw %in% "Castle")
str_detect(look$Subjectlaw, pattern = "Castle")
look[str_detect(look$Subjectlaw, pattern = "Castle"),]
look[str_detect(look$Subjectlaw, pattern = "Castle"),"Subjectlaw"]
look[str_detect(look$Subjectlaw, pattern = "Castle"),"Subjectlaw"] <- "Castle Law/Stand Your Ground"
look[str_detect(look$Subjectlaw, pattern = "Concealed carry on college"),"Subjectlaw"]
look[str_detect(look$Subjectlaw, pattern = "Concealed carry on college"),"Subjectlaw"] <- "Concealed carry on college campuses"
look[str_detect(look$Subjectlaw, pattern = "Constitutional right to bear arms"),"Subjectlaw"]
look[str_detect(look$Subjectlaw, pattern = "Constitutional right to bear arms"),"Subjectlaw"] <- "Constitutional right to bear arms?"
look[str_detect(look$Subjectlaw, pattern = "Firearm registration"),"Subjectlaw"]
look[str_detect(look$Subjectlaw, pattern = "Firearm registration"),"Subjectlaw"] <- "Firearm registration required?"
look[str_detect(look$Subjectlaw, pattern = "Magazine capacity restriction"),"Subjectlaw"]
look[str_detect(look$Subjectlaw, pattern = "Magazine capacity restriction"),"Subjectlaw"] <- "Magazine capacity restriction?"
look[str_detect(look$Subjectlaw, pattern = "Magazine restriction"),"Subjectlaw"]
look[str_detect(look$Subjectlaw, pattern = "Magazine restriction"),"Subjectlaw"] <- "Magazine capacity restriction?"
look[str_detect(look$Subjectlaw, pattern = "Magazine restriction"),"Subjectlaw"] <- "Magazine capacity restriction?"
look[str_detect(look$Subjectlaw, pattern = "Owner required"),"Subjectlaw"]
look[str_detect(look$Subjectlaw, pattern = "Owner permit required"),"Subjectlaw"]
look[str_detect(look$Subjectlaw, pattern = "Owner permit required"),"Subjectlaw"] <- "Owner license required?"
look[str_detect(look$Subjectlaw, pattern = "Peaceable journey law"),"Subjectlaw"]
look[str_detect(look$Subjectlaw, pattern = "Peaceable journey law"),"Subjectlaw"] <- "Peaceable journey law?"
look[str_detect(look$Subjectlaw, pattern = "Stand your ground"),"Subjectlaw"]
look[str_detect(look$Subjectlaw, pattern = "Stand your ground"),"Subjectlaw"] <-"Castle Law/Stand Your Ground"
look[str_detect(look$Subjectlaw, pattern = "State pre"),"Subjectlaw"]
look[str_detect(look$Subjectlaw, pattern = "State pre"),"Subjectlaw"] %>% View()
look[str_detect(look$Subjectlaw, pattern = "State pre"),"Subjectlaw"] <- "State preemption of local restrictions?"
look[str_detect(look$Subjectlaw, pattern = "Title ii"),"Subjectlaw"]
look[str_detect(look$Subjectlaw, pattern = "Vehicle carry"),"Subjectlaw"]
look[str_detect(look$Subjectlaw, pattern = "Vehicle carry"),"Subjectlaw"] <- "Vehicle carry permitted?"
unique(look$Subjectlaw)
unique(look$Subjectlaw) %>% View()
look[str_detect(look$Subjectlaw, pattern = "Title ii"),"Subjectlaw"] <- "Assault weapon law?"
look[str_detect(look$Subjectlaw, pattern = "Assault weapon law?"),"Subjectlaw"]
look[str_detect(look$Subjectlaw, pattern = "Assault weapon law?"),c("Subjectlaw", "state")]
look[str_detect(look$Subjectlaw, pattern = "Assault weapon law?") & look$state == "New York",c("Subjectlaw", "state")]
look[str_detect(look$Notes, pattern = "Ownership of machine") & look$Subjectlaw, pattern = "Assault weapon law?") & look$state == "New York",c("Subjectlaw", "state", "Notes")]
str_detect(look$Notes, pattern = "Ownership of machine")
look[str_detect(look$Notes, pattern = "Ownership of machine") & str_detect(look$Subjectlaw, pattern = "Assault weapon law?") & look$state == "New York", c("Subjectlaw", "state", "Notes")]
look[str_detect(look$Notes, pattern = "Ownership of machine") & str_detect(look$Subjectlaw, pattern = "Assault weapon law?") & look$state == "New York", c("Subjectlaw")] <- "Nfa weapons restricted?"
look[str_detect(look$Subjectlaw, pattern = "Title ii"), "Subjectlaw"]
unique(look$Subjectlaw) %>% View()
longguns <- list(
yes <- c("18", "Yes"),
partially <- c("Partial", "Yes, with exceptions", "Yes*"),
dontknow <- c("N/A", "Not defined - de facto", NA),
no <- c("No[53], No")
)
runApp('GVShinyDashboardLaws.R')
runApp('GVShinyDashboardLaws.R')
lookgood <- look
look <- enframe(state_laws, name = "state", value = "laws") %>%
unnest() %>%
map_dfc(as.factor) %>%
mutate(Subjectlaw = str_to_sentence(Subjectlaw))
look[str_detect(look$Subjectlaw, pattern = "Assault weapon"),"Subjectlaw"] <- "Assault weapon law?"
look[str_detect(look$Subjectlaw, pattern = "Castle"),"Subjectlaw"] <- "Castle Law/Stand Your Ground"
look[str_detect(look$Subjectlaw, pattern = "Concealed carry on college"),"Subjectlaw"] <- "Concealed carry on college campuses"
look[str_detect(look$Subjectlaw, pattern = "Constitutional right to bear arms"),"Subjectlaw"] <- "Constitutional right to bear arms?"
look[str_detect(look$Subjectlaw, pattern = "Firearm registration"),"Subjectlaw"] <- "Firearm registration required?"
look[str_detect(look$Subjectlaw, pattern = "Magazine capacity restriction"),"Subjectlaw"] <- "Magazine capacity restriction?"
look[str_detect(look$Subjectlaw, pattern = "Magazine restriction"),"Subjectlaw"] <- "Magazine capacity restriction?"
look[str_detect(look$Subjectlaw, pattern = "Owner permit required"),"Subjectlaw"] <- "Owner license required?"
look[str_detect(look$Subjectlaw, pattern = "Peaceable journey law"),"Subjectlaw"] <- "Peaceable journey law?"
look[str_detect(look$Subjectlaw, pattern = "Permit required to purchase"),"Subjectlaw"]
look[str_detect(look$Subjectlaw, pattern = "Shall certify"),"Subjectlaw"]
look[str_detect(look$Subjectlaw, pattern = "Stand your ground"),"Subjectlaw"] <-"Castle Law/Stand Your Ground"
look[str_detect(look$Subjectlaw, pattern = "State pre"),"Subjectlaw"] <- "State preemption of local restrictions?"
look[str_detect(look$Subjectlaw, pattern = "Title ii"), "Subjectlaw"] <- "Nfa weapons restricted?"
look[str_detect(look$Subjectlaw, pattern = "Vehicle carry"),"Subjectlaw"] <- "Vehicle carry permitted?"
runApp('GVShinyDashboardLaws.R')
look <- map_dfc(look, as.factor)
runApp('GVShinyDashboardLaws.R')
runApp('GVShinyDashboardLaws.R')
library(shiny); runApp('GVShinyDashboardLaws.R')
runApp('GVShinyDashboardLaws.R')
runApp('GVShinyDashboardLaws.R')
runApp('GVShinyDashboardLaws.R')
runApp('GVShinyDashboardLaws.R')
runApp('GVShinyDashboardLaws.R')
runApp('GVShinyDashboardLaws.R')
runApp('GVShinyDashboardLaws.R')
runApp('GVShinyDashboardLaws.R')
library(plotly)
?layout
runApp('GVShinyDashboardLaws.R')
runApp('GVShinyDashboardLaws.R')
runApp('GVShinyDashboardLaws.R')
runApp('GVShinyDashboardLaws.R')
?hoverOpts
runApp('GVShinyDashboardLaws.R')
runApp('GVShinyDashboardLaws.R')
runApp('GVShinyDashboardLaws.R')
runApp('GVShinyDashboardLaws.R')
library(shiny); runApp('GVShinyDashboardLaws.R')
runApp('GVShinyDashboardLaws.R')
runApp('GVShinyDashboardLaws.R')
library(shiny); runApp('GVShinyDashboardLaws.R')
